generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  username         String   @unique
  email            String   @unique
  phone            String   @unique
  password         String
  profilePicture   String?  
  rating           Float    @default(0.0)
  tasksPosted      Int      @default(0)
  tasksCompleted   Int      @default(0)
  isTasker         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  postedTasks      Task[]   @relation("PostedTasks")
  assignedTasks    Task[]   @relation("AssignedTasks")
  taskApplications TaskApplications[]
  reviewsGiven     Review[] @relation("ReviewsGiven")
  reviewsReceived  Review[] @relation("ReviewsReceived")
}

model Task {
  id               String      @id @default(cuid())
  title            String
  description      String
  category         String
  location         String
  offer            Float       
  status           TaskStatus  @default(OPEN)

  taskPosterId     String
  taskPoster       User        @relation("PostedTasks", fields: [taskPosterId], references: [id])

  taskerAssignedId String
  taskerAssigned   User        @relation("AssignedTasks", fields: [taskerAssignedId], references: [id])

  taskersApplied   TaskApplications[]

  reviews          Review[]

  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @default(now())
}


model TaskApplications {
  id        String                @id @default(cuid())
  appliedAt DateTime              @default(now())
  status    TaskApplicationStatus @default(PENDING)

  taskId    String
  task      Task                  @relation(fields: [taskId], references: [id])

  userId    String
  user      User                  @relation(fields: [userId], references: [id])
}

model Review {
  id         String    @id @default(cuid())

  reviewerId String
  reviewer   User      @relation("ReviewsGiven", fields: [reviewerId], references: [id])

  revieweeId String
  reviewee   User      @relation("ReviewsReceived", fields: [revieweeId], references: [id])

  taskId     String
  task       Task      @relation(fields: [taskId], references: [id])

  rating     Float     @default(0.0)
  comment    String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())


}

enum TaskStatus {
  CREATED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  OPEN
}

enum TaskApplicationStatus {
  ACCEPTED
  PENDING
  DENIED
}
